def home_text(user_name: str, authorized: bool) -> str:
    base = (
        f"–ü—Ä–∏–≤–µ—Ç, {user_name}.\n"
        f"–Ø –±–æ—Ç –ø–æ—Å—Ç–∞–≤–æ–∫ Football Shop ü§ñ!\n"
        f"–ù–∞ WB —è —É–º–µ—é –±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ø–æ—Å—Ç–∞–≤–∫–∏, –∏—Å–∫–∞—Ç—å —Å–ª–æ—Ç—ã –∏ –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—Ç—å —Ç–æ–≤–∞—Ä—ã.\n"
        f"–ê —Ç–∞–∫ –∂–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø–æ—Å—Ç–∞–≤–∫–∏ —Å –≤–∞—à–∏–º —Ç–æ–≤–∞—Ä–æ–º –∑–∞ –≤–∞—Å!"
    )
    if authorized:
        base += "\n\n‚úÖ –í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –≤ WB Partner."
    return base


def ask_phone_text() -> str:
    return "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ +79999999999:"


def ask_sms_code_text() -> str:
    return "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ –∏–∑ –°–ú–°:"


def ask_email_code_text() -> str:
    return "–í–≤–µ–¥–∏—Ç–µ –∫–æ–¥ —Å e-mail:"


def auth_success_text() -> str:
    return "‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞. –ê–∫–∫–∞—É–Ω—Ç –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –≤–∞—à–µ–º—É Telegram."


def profile_text_single(org_name: str | None) -> str:
    org_line = f"–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: {org_name}" if org_name else "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: ‚Äî"
    return f"üë§ –ü—Ä–æ—Ñ–∏–ª—å WB Seller\n{org_line}"


def profile_text_multi(orgs: list[dict], active_id: str | None) -> str:
    lines = ["üë§ –ü—Ä–æ—Ñ–∏–ª–∏ WB Seller:"]
    for x in orgs:
        mark = "‚úÖ" if x.get("id") == active_id else "‚Ä¢"
        name = x.get("name") or "‚Äî"
        inn = f" (–ò–ù–ù {x.get('inn')})" if x.get("inn") else ""
        lines.append(f"{mark} {name}{inn} ‚Äî id: {x.get('id')}")
    return "\n".join(lines)


def logout_done_text() -> str:
    return "–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞. –ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è –Ω–æ–≤–æ–π —Å–µ—Å—Å–∏–∏."
