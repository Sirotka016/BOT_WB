from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup


def kb_home(authorized: bool) -> InlineKeyboardMarkup:
    row1 = []
    if authorized:
        row1.append(InlineKeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å", callback_data="profile"))
        # –í–ê–ñ–ù–û: –Ω–∞ –≥–ª–∞–≤–Ω–æ–º –±–æ–ª—å—à–µ –Ω–∏—á–µ–≥–æ –Ω–µ –¥–æ–±–∞–≤–ª—è–µ–º, —Ç—ã –ø—Ä–æ—Å–∏–ª —Ç–æ–ª—å–∫–æ –ü—Ä–æ—Ñ–∏–ª—å/–î–æ–º–æ–π/–ó–∞–∫—Ä—ã—Ç—å (–î–æ–º–æ–π = —ç—Ç–æ—Ç —ç–∫—Ä–∞–Ω)
    else:
        row1.append(InlineKeyboardButton(text="üîë –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è", callback_data="auth"))
    # –î–æ–º–æ–π = —ç—Ç–æ—Ç —ç–∫—Ä–∞–Ω, –æ—Ç–¥–µ–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –Ω–µ –Ω—É–∂–Ω–æ ‚Äî –º—ã –∏ —Ç–∞–∫ ¬´–¥–æ–º–∞¬ª
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [*row1],
            [InlineKeyboardButton(text="‚ùå –ó–∞–∫—Ä—ã—Ç—å", callback_data="close")],
        ]
    )


def kb_auth_stub() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="üè† –î–æ–º–æ–π", callback_data="home"),
                InlineKeyboardButton(text="‚ùå –ó–∞–∫—Ä—ã—Ç—å", callback_data="close"),
            ]
        ]
    )


def kb_profile_view(has_multiple: bool) -> InlineKeyboardMarkup:
    rows = []
    # –í –ø—Ä–æ—Ñ–∏–ª–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫–Ω–æ–ø–∫–∏: –°–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å, –í—ã–π—Ç–∏, –î–æ–º–æ–π, –û–±–Ω–æ–≤–∏—Ç—å, –ó–∞–∫—Ä—ã—Ç—å
    if has_multiple:
        rows.append([InlineKeyboardButton(text="üîÄ –°–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å", callback_data="profile_switch")])
    rows.append([InlineKeyboardButton(text="üö™ –í—ã–π—Ç–∏ —Å –∞–∫–∫–∞—É–Ω—Ç–∞", callback_data="logout")])
    rows.append([
        InlineKeyboardButton(text="üè† –î–æ–º–æ–π", callback_data="home"),
        InlineKeyboardButton(text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", callback_data="profile_refresh"),
    ])
    rows.append([InlineKeyboardButton(text="‚ùå –ó–∞–∫—Ä—ã—Ç—å", callback_data="close")])
    return InlineKeyboardMarkup(inline_keyboard=rows)


def kb_profile_switch(profiles: list[tuple[str, str]], active_id: str | None) -> InlineKeyboardMarkup:
    # profiles: —Å–ø–∏—Å–æ–∫ (id, name)
    kb: list[list[InlineKeyboardButton]] = []
    for pid, name in profiles:
        label = f"‚úÖ {name}" if pid == active_id else f"{name}"
        kb.append([InlineKeyboardButton(text=label, callback_data=f"set_profile:{pid}")])
    kb.append([
        InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="profile"),
        InlineKeyboardButton(text="‚ùå –ó–∞–∫—Ä—ã—Ç—å", callback_data="close")
    ])
    return InlineKeyboardMarkup(inline_keyboard=kb)
